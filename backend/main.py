from typing import List

from fastapi import FastAPI, HTTPException
from fastapi.middleware.cors import CORSMiddleware
from pydantic import BaseModel

app = FastAPI(title="Definitions API", version="1.0.0")

# CORS for Vite dev server
origins = [
    "http://localhost:8080",
    "http://127.0.0.1:8080",
]
app.add_middleware(
    CORSMiddleware,
    allow_origins=origins,
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)


class DefineRequest(BaseModel):
    input: str


class Definition(BaseModel):
    term: str
    definition: str
    partOfSpeech: str
    examples: List[str]
    synonyms: List[str]


class DefineResponse(BaseModel):
    success: bool
    data: Definition


@app.get("/health")
def health():
    return {"status": "ok"}


@app.post("/api/v1/define", response_model=DefineResponse)
def define(req: DefineRequest):
    trimmed = (req.input or "").strip()
    if not trimmed:
        raise HTTPException(status_code=400, detail="Please enter a term to define.")
    if len(trimmed) > 500:
        raise HTTPException(status_code=400, detail="Input exceeds 500 characters.")

    # Simple demo response (replace with your LLM or business logic later)
    definition = Definition(
        term=trimmed,
        definition=(
            "A concise, structured explanation generated by the FastAPI backend for demonstration purposes."
        ),
        partOfSpeech="noun",
        examples=[
            f'The term "{trimmed}" is used frequently in modern AI discussions.',
            f'Researchers defined "{trimmed}" in multiple ways.',
            f'Understanding "{trimmed}" improves product clarity.',
        ],
        synonyms=["concept", "notion", "idea", "term", "expression"],
    )

    return DefineResponse(success=True, data=definition)


if __name__ == "__main__":
    import uvicorn

    uvicorn.run("main:app", host="0.0.0.0", port=8000, reload=True)
